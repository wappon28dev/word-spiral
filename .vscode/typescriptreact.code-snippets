{
  // Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "page": {
    "prefix": "@",
    "body": [
      "\"use client\";",
      "",
      "import { type ReactElement } from \"react\";",
      "import { styled as p } from \"panda/jsx\";",
      "",
      "export default function Page${1:XXX}(): ReactElement {",
      "  return (",
      "    <p.div alignItems=\"center\" display=\"grid\" h=\"100%\" placeItems=\"center\">",
      "      <p.article>TODO</p.article>",
      "    </p.div>",
      "  );",
      "}"
    ],
    "description": ""
  },
  "scene": {
    "prefix": "@scene",
    "body": [
      "\"use client\";",
      "",
      "import { type ReactElement, useEffect } from \"react\";",
      "import { styled as p } from \"panda/jsx\";",
      "import useViewTransitionRouter from \"@/hooks/useViewTransitionRouter\";",
      "import { push2scene } from \"@/lib/manifests\";",
      "",
      "export default function Scene${1:Name}(): ReactElement {",
      "  const router = useViewTransitionRouter();",
      "  useEffect(() => {",
      "    push2scene(router, \"${2:}${1:Name}\");",
      "  }, [router]);",
      "  return <p.div />;",
      "}",
      ""
    ]
  },
  "ruby": {
    "prefix": "@ruby",
    "body": ["<Ruby rb=\"${1:親文字}\" rt=\"${2:ルビ文字}\" />$0"]
  },
  "jsx-styled": {
    "prefix": "@p",
    "body": ["import { styled as p } from \"panda/jsx\";"]
  }
}
